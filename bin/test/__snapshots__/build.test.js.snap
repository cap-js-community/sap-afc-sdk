// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Build Java / CF 1`] = `
"{
  "name": "afcsdk-cds",
  "version": "1.0.0",
  "description": "Generated by cds-services-archetype",
  "license": "ISC",
  "repository": "<Add your repository here>",
  "devDependencies": {
    "@sap/cds-dk": "^8.9.2"
  },
  "dependencies": {
    "@cap-js-community/sap-afc-sdk": "file:../../.."
  },
  "cds": {
    "requires": {
      "workzone": true
    }
  },
  "sapux": [
    "app/scheduling.monitoring.job"
  ],
  "scripts": {
    "start": "mvn spring-boot:run",
    "test": "mvn test",
    "build": "mvn cds:build"
  }
}"
`;

exports[`Build Java / CF 2`] = `
"{
  "routes": [
    {
      "source": "^/(.*)$",
      "target": "$1",
      "destination": "srv-api",
      "csrfProtection": true
    }
  ],
  "websockets": {
    "enabled": true
  }
}
"
`;

exports[`Build Java / CF 3`] = `
"@api=<api endpoint from cloud deployment>
@token=<xsuaa token>

### Job Definition
GET https://{{api}}/job-scheduling/v1/JobDefinition
Authorization: Bearer {{token}}

### Job Definition Parameters
GET https://{{api}}/job-scheduling/v1/JobDefinition/JOB_1/parameters
Authorization: Bearer {{token}}

### Job
GET https://{{api}}/job-scheduling/v1/Job
Authorization: Bearer {{token}}

### Job Parameters
GET https://{{api}}/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/parameters
Authorization: Bearer {{token}}

### Job Results
GET http://{{api}}/job-scheduling/v1/Job/5a89dfec-59f9-4a91-90fe-3c7ca7407103/results
Authorization: Bearer {{token}}

### Job Result Messages
GET http://{{api}}/job-scheduling/v1/JobResult/c2eb590f-9505-4fd6-a5e2-511a1b2ff47f/messages
Authorization: Bearer {{token}}

### Job Result Message Data
GET http://{{api}}/job-scheduling/v1/JobResult/b2eb590f-9505-4fd6-a5e2-511a1b2ff47f/data
Authorization: Bearer {{token}}

### Create Job
POST https://{{api}}/job-scheduling/v1/Job
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "JOB_1",
    "referenceID": "abc4711",
    "parameters": [{
        "name": "A",
        "value": "abc"
      },
      {
        "name": "B",
        "value": "21"
      },
      {
        "name": "C",
        "value": "false"
      },
      {
        "name": "D",
        "value": "11.12"
      },
      {
        "name": "E",
        "value": "2025-01-01T12:00:00Z"
      }
    ]
}

### Cancel Job
POST https://{{api}}/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/cancel
Authorization: Bearer {{token}}
Content-Type: application/json
"
`;

exports[`Build Java / CF 4`] = `
"@port=8080
@host=localhost:{{port}}
@username=alice
@password=alice

### Job Definition
GET http://{{host}}/api/job-scheduling/v1/JobDefinition
Authorization: Basic {{username}} {{password}}

### Job Definition Parameters
GET http://{{host}}/api/job-scheduling/v1/JobDefinition/JOB_1/parameters
Authorization: Basic {{username}} {{password}}

### Job
GET http://{{host}}/api/job-scheduling/v1/Job
Authorization: Basic {{username}} {{password}}

### Job Parameters
GET http://{{host}}/api/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/parameters
Authorization: Basic {{username}} {{password}}

### Job Results
GET http://{{host}}/api/job-scheduling/v1/Job/5a89dfec-59f9-4a91-90fe-3c7ca7407103/results
Authorization: Basic {{username}} {{password}}

### Job Result Messages
GET http://{{host}}/api/job-scheduling/v1/JobResult/c2eb590f-9505-4fd6-a5e2-511a1b2ff47f/messages
Authorization: Basic {{username}} {{password}}

### Job Result Message Data
GET http://{{host}}/api/job-scheduling/v1/JobResult/b2eb590f-9505-4fd6-a5e2-511a1b2ff47f/data
Authorization: Basic {{username}} {{password}}

### Create Job
POST http://{{host}}/api/job-scheduling/v1/Job
Authorization: Basic {{username}} {{password}}
Content-Type: application/json

{
    "name": "JOB_1",
    "referenceID": "abc4711",
    "parameters": [{
        "name": "A",
        "value": "abc"
      },
      {
        "name": "B",
        "value": "21"
      },
      {
        "name": "C",
        "value": "false"
      },
      {
        "name": "D",
        "value": "11.12"
      },
      {
        "name": "E",
        "value": "2025-01-01T12:00:00Z"
      }
    ]
}

### Cancel Job
POST http://{{host}}/api/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/cancel
Authorization: Basic {{username}} {{password}}
Content-Type: application/json
"
`;

exports[`Build Java / CF 5`] = `
"<?xml version="1.0" encoding="UTF-8" standalone="yes"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>afcsdk-parent</artifactId>
    <groupId>customer</groupId>
    <version>\${revision}</version>
  </parent>
  <artifactId>afcsdk</artifactId>
  <packaging>jar</packaging>
  <name>afcsdk</name>
  <dependencies>
    <dependency>
      <groupId>com.sap.cds</groupId>
      <artifactId>cds-starter-spring-boot</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sap.cds</groupId>
      <artifactId>cds-adapter-odata-v4</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>

  	<dependency>
  		<groupId>com.sap.cds</groupId>
  		<artifactId>cds-starter-cloudfoundry</artifactId>
  		<scope>runtime</scope>
  	</dependency>

  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-actuator</artifactId>
  	</dependency>
  </dependencies>
  <build>
    <finalName>\${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>\${spring.boot.version}</version>
        <configuration>
          <skip>false</skip>
        </configuration>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <classifier>exec</classifier>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.sap.cds</groupId>
        <artifactId>cds-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>cds.clean</id>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
          <execution>
            <id>cds.install-node</id>
            <goals>
              <goal>install-node</goal>
            </goals>
          </execution>
          <execution>
            <id>cds.npm-ci</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>ci</arguments>
            </configuration>
          </execution>
          <execution>
            <id>cds.resolve</id>
            <goals>
              <goal>resolve</goal>
            </goals>
          </execution>
          <execution>
            <id>cds.build</id>
            <goals>
              <goal>cds</goal>
            </goals>
            <configuration>
              <commands>
                <command>build --for java</command>
                <command>deploy --to h2 --with-mocks --dry --out "\${project.basedir}/src/main/resources/schema-h2.sql"</command>
              </commands>
            </configuration>
          </execution>
          <execution>
            <id>cds.generate</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <basePackage>cds.gen</basePackage>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>"
`;

exports[`Build Java / CF 6`] = `
"---
spring:
  config.activate.on-profile: default
  sql.init.platform: h2
  openservicebroker:
    catalog:
      services:
        - id: e25a901f-43d1-43c0-bbd6-48b9c6aecb61
          name: afcsdk
          description: AFC Scheduling Provider Service
          bindable: true
          plans:
            - id: 958cbd91-af93-4fdd-a793-16c82ae9e70b
              name: standard
              description: Standard plan
              free: true
              bindable: true
              plan_updateable: true
          metadata:
            displayName: AFC Scheduling Provider Service
            longDescription: Scheduling Provider Service for SAP Advanced Financial Closing
cds:
  data-source.auto-config.enabled: false
sap-afc-sdk:
  endpoints:
    approuter: https://afcsdk-approuter.cloud.sap
    server: https://afcsdk-srv.cloud.sap
  mockProcessing:
    min: 0
    max: 10
    default: completed
    status:
      completed: 0.5
      completedWithWarning: 0.2
      completedWithError: 0.2
      failed: 0.1
broker:
  name: afcsdk
  user: broker-user
  credentialsHash: sha256:xxx=:xxx=
  endpoints:
    api: /api
    job-scheduling-v1: /api/job-scheduling/v1
  credential-types:
    - binding-secret
    - x509
---
management:
  endpoint:
    health:
      show-components: always
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health
  health:
    defaults:
      enabled: false
    ping:
      enabled: true
    db:
      enabled: true
"
`;

exports[`Build Java / CF 7`] = `
"package customer.afcsdk.scheduling;

import cds.gen.schedulingprocessingservice.*;

import com.sap.cds.services.handler.EventHandler;
import com.sap.cds.services.handler.annotations.On;
import com.sap.cds.services.handler.annotations.ServiceName;
import com.sap.cds.services.persistence.PersistenceService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

import java.io.IOException;

@Component
@ServiceName(SchedulingProcessingService_.CDS_NAME)
public class SchedulingProcessingHandler implements EventHandler {

    @Autowired
    protected PersistenceService persistenceService;

    public CustomSchedulingProcessingHandler() {
        super();
    }

    @Order(1)
    @On(event = ProcessJobContext.CDS_NAME)
    public void processJob(ProcessJobContext context) throws IOException {
        // Your logic goes here
        context.proceed();
    }

    @Order(1)
    @On(event = UpdateJobContext.CDS_NAME)
    public void updateJob(UpdateJobContext context) {
        // Your logic goes here
        context.proceed();
    }

    @Order(1)
    @On(event = CancelJobContext.CDS_NAME)
    public void cancelJob(CancelJobContext context) {
        // Your logic goes here
        context.proceed();
    }

    @Order(1)
    @On(event = SyncJobContext.CDS_NAME)
    public void syncJob(SyncJobContext context) {
        // Your logic goes here
        context.proceed();
    }
}"
`;

exports[`Build Java / CF 8`] = `
"package customer.afcsdk.scheduling;

import cds.gen.schedulingprocessingservice.SchedulingProcessingService;

import cds.gen.schedulingproviderservice.*;
import cds.gen.schedulingproviderservice.Job;
import cds.gen.schedulingproviderservice.JobResult_;
import cds.gen.schedulingproviderservice.Job_;

import com.sap.cds.services.cds.CdsCreateEventContext;
import com.sap.cds.services.cds.CqnService;
import com.sap.cds.services.handler.EventHandler;
import com.sap.cds.services.handler.annotations.On;
import com.sap.cds.services.handler.annotations.ServiceName;
import com.sap.cds.services.persistence.PersistenceService;

import org.springframework.core.annotation.Order;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.util.*;

@Component
@ServiceName(SchedulingProviderService_.CDS_NAME)
public class SchedulingProviderHandler implements EventHandler {

    @Autowired
    private PersistenceService persistenceService;

    @Autowired
    private SchedulingProcessingService processingService;

    @Order(1)
    @On(event = CqnService.EVENT_CREATE, entity = Job_.CDS_NAME)
    public void createJob(CdsCreateEventContext context, List<Job> jobs) {
        // Your logic goes here
        context.proceed();
    }

    @Order(1)
    @On(event = JobCancelContext.CDS_NAME, entity = Job_.CDS_NAME)
    public void cancelJob(JobCancelContext context) {
        // Your logic goes here
        context.proceed();
    }

    @Order(1)
    @On(event = JobResultDataContext.CDS_NAME, entity = JobResult_.CDS_NAME)
    public void downloadData(JobResultDataContext context) throws IOException {
        // Your logic goes here
        context.proceed();
    }
}"
`;

exports[`Build Java / CF 9`] = `
"package customer.afcsdk.scheduling;

import org.json.JSONArray;
import org.json.JSONObject;
import org.junit.jupiter.api.Test;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.web.servlet.MockMvc;

import java.util.List;
import java.util.Map;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

@AutoConfigureMockMvc
public class CustomSchedulingProviderControllerTest {

    @Autowired
    private MockMvc mockMvc;

    @Test
    @WithMockUser("authenticated")
    public void getJobDefinitions() throws Exception {
        mockMvc.perform(get("/api/job-scheduling/v1/JobDefinition"))
                .andExpect(status().isOk());
    }

    @Test
    @WithMockUser("authenticated")
    public void getJobs() throws Exception {
        mockMvc.perform(get("/api/job-scheduling/v1/Job"))
                .andExpect(status().isOk());
    }

    @Test
    @WithMockUser("authenticated")
    public void createJobBasic() throws Exception {
        JSONObject job = new JSONObject(Map.of(
                "name", "JOB_1",
                "referenceID", "c1253940-5f25-4a0b-8585-f62bd085b327",
                "parameters", new JSONArray(List.of(
                        new JSONObject(Map.of(
                                "name", "A",
                                "value", "abc")),
                        new JSONObject(Map.of(
                                "name", "C",
                                "value", "true")))
                ))
        );
        mockMvc.perform(post("/api/job-scheduling/v1/Job").contentType("application/json")
                        .content(job.toString()))
                .andExpect(status().isCreated());

    }
}
"
`;

exports[`Build Java / CF 10`] = `
"_schema-version: 3.3.0
ID: afcsdk
version: 1.0.0-SNAPSHOT
description: "A simple CAP project."
parameters:
  enable-parallel-deployments: true
  deploy_mode: html5-repo
modules:
  - name: afcsdk-srv
    type: java
    path: srv
    parameters:
      instances: 1
      buildpack: sap_java_buildpack_jakarta
    properties:
      SPRING_PROFILES_ACTIVE: cloud,sandbox
      JBP_CONFIG_COMPONENTS: "jres: ['com.sap.xs.java.buildpack.jre.SAPMachineJRE']"
      JBP_CONFIG_SAP_MACHINE_JRE: '{ version: 21.+ }'
      JBP_CONFIG_JAVA_OPTS:
        from_environment: false
        java_opts: >
          -javaagent:META-INF/.sap_java_buildpack/otel_agent/opentelemetry-javaagent.jar
          -Dotel.javaagent.extensions=META-INF/.sap_java_buildpack/otel_agent_extension/otel-agent-ext-java.jar
      OTEL_METRICS_EXPORTER: cloud-logging
      OTEL_TRACES_EXPORTER: cloud-logging
      OTEL_LOGS_EXPORTER: none
    build-parameters:
      builder: custom
      commands:
        - mvn clean package -DskipTests=true --batch-mode
      build-result: target/*-exec.jar
    provides:
      - name: srv-api # required by consumers of CAP services (e.g. approuter)
        properties:
          srv-url: \${default-url}
    requires:
      - name: afcsdk-destination
      - name: afcsdk-auth
      - name: afcsdk-db
      - name: afcsdk-cloud-logging

  - name: afcsdk-db-deployer
    type: hdb
    path: db
    parameters:
      buildpack: nodejs_buildpack
    build-parameters:
      builder: custom
      commands:
        - npm run build
    requires:
      - name: afcsdk-db

  - name: afcsdk
    type: approuter.nodejs
    path: app/router
    parameters:
      keep-existing-routes: true
      disk-quota: 256M
      memory: 256M
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api # must be used in xs-app.json as well
          url: ~{srv-url}
          forwardAuthToken: true
      - name: afcsdk-auth
      - name: afcsdk-destination
      - name: afcsdk-html5-runtime
      - name: afcsdk-cloud-logging
    provides:
      - name: app-api
        properties:
          app-protocol: \${protocol}
          app-uri: \${default-uri}
          url: \${default-url}

  - name: afcsdk-app-deployer
    type: com.sap.application.content
    path: .
    requires:
      - name: afcsdk-html5-repo-host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - name: afcsdkscheduling.monitoring.job
          artifacts:
            - scheduling.monitoring.job.zip
          target-path: app/
  - name: afcsdk-destinations
    type: com.sap.application.content
    requires:
      - name: afcsdk-auth
        parameters:
          service-key:
            name: afcsdk-auth-key
      - name: afcsdk-html5-repo-host
        parameters:
          service-key:
            name: afcsdk-html5-repo-host-key
      - name: srv-api
      - name: afcsdk-destination
        parameters:
          content-target: true
    build-parameters:
      no-source: true
    parameters:
      content:
        instance:
          existing_destinations_policy: update
          destinations:
            - Name: afcsdk-html5-repository
              ServiceInstanceName: afcsdk-html5-repo-host
              ServiceKeyName: afcsdk-html5-repo-host-key
              sap.cloud.service: afcsdk.service
            - Name: afcsdk-auth
              Authentication: OAuth2UserTokenExchange
              ServiceInstanceName: afcsdk-auth
              ServiceKeyName: afcsdk-auth-key
              sap.cloud.service: afcsdk.service

  - name: afcsdkscheduling.monitoring.job
    type: html5
    path: app/scheduling.monitoring.job
    build-parameters:
      build-result: dist
      builder: custom
      commands:
        - npm ci
        - npm run build
      supported-platforms: []
resources:
  - name: afcsdk-destination
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      config:
        HTML5Runtime_enabled: true
        init_data:
          instance:
            existing_destinations_policy: update
            destinations:
              - Name: srv-api
                URL: ~{srv-api/srv-url}
                Authentication: NoAuthentication
                Type: HTTP
                ProxyType: Internet
                HTML5.ForwardAuthToken: true
                HTML5.DynamicDestination: true
              - Name: ui5
                URL: https://ui5.sap.com
                Authentication: NoAuthentication
                Type: HTTP
                ProxyType: Internet
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api # must be used in xs-app.json as well
          url: ~{srv-url}
          forwardAuthToken: true
  - name: afcsdk-auth
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: broker
      path: ./xs-security.json
      config:
        xsappname: afcsdk-\${org}-\${space}
        tenant-mode: dedicated
  - name: afcsdk-db
    type: com.sap.xs.hdi-container
    parameters:
      service: hana
      service-plan: hdi-shared

  - name: afcsdk-html5-repo-host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host
  - name: afcsdk-html5-runtime
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime
  - name: afcsdk-cloud-logging
    type: org.cloudfoundry.managed-service
    parameters:
      service: cloud-logging
      service-plan: standard
      config:
        ingest_otlp:
          enabled: true
  - name: afcsdk-auth
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        xsappname: afcsdk-\${org}-\${space}
        tenant-mode: dedicated
"
`;

exports[`Build Java / Kyma 1`] = `
"{
  "name": "afcsdk-cds",
  "version": "1.0.0",
  "description": "Generated by cds-services-archetype",
  "license": "ISC",
  "repository": "<Add your repository here>",
  "devDependencies": {
    "@sap/cds-dk": "^8.9.2"
  },
  "dependencies": {
    "@cap-js-community/sap-afc-sdk": "file:../../.."
  },
  "cds": {
    "requires": {
      "workzone": true
    }
  },
  "sapux": [
    "app/scheduling.monitoring.job"
  ],
  "scripts": {
    "start": "mvn spring-boot:run",
    "test": "mvn test",
    "build": "mvn cds:build"
  }
}"
`;

exports[`Build Java / Kyma 2`] = `
"{
  "routes": [
    {
      "source": "^/(.*)$",
      "target": "$1",
      "destination": "srv-api",
      "csrfProtection": true
    }
  ],
  "websockets": {
    "enabled": true
  }
}
"
`;

exports[`Build Java / Kyma 3`] = `
"@api=<api endpoint from cloud deployment>
@token=<xsuaa token>

### Job Definition
GET https://{{api}}/job-scheduling/v1/JobDefinition
Authorization: Bearer {{token}}

### Job Definition Parameters
GET https://{{api}}/job-scheduling/v1/JobDefinition/JOB_1/parameters
Authorization: Bearer {{token}}

### Job
GET https://{{api}}/job-scheduling/v1/Job
Authorization: Bearer {{token}}

### Job Parameters
GET https://{{api}}/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/parameters
Authorization: Bearer {{token}}

### Job Results
GET http://{{api}}/job-scheduling/v1/Job/5a89dfec-59f9-4a91-90fe-3c7ca7407103/results
Authorization: Bearer {{token}}

### Job Result Messages
GET http://{{api}}/job-scheduling/v1/JobResult/c2eb590f-9505-4fd6-a5e2-511a1b2ff47f/messages
Authorization: Bearer {{token}}

### Job Result Message Data
GET http://{{api}}/job-scheduling/v1/JobResult/b2eb590f-9505-4fd6-a5e2-511a1b2ff47f/data
Authorization: Bearer {{token}}

### Create Job
POST https://{{api}}/job-scheduling/v1/Job
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "JOB_1",
    "referenceID": "abc4711",
    "parameters": [{
        "name": "A",
        "value": "abc"
      },
      {
        "name": "B",
        "value": "21"
      },
      {
        "name": "C",
        "value": "false"
      },
      {
        "name": "D",
        "value": "11.12"
      },
      {
        "name": "E",
        "value": "2025-01-01T12:00:00Z"
      }
    ]
}

### Cancel Job
POST https://{{api}}/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/cancel
Authorization: Bearer {{token}}
Content-Type: application/json
"
`;

exports[`Build Java / Kyma 4`] = `
"@port=8080
@host=localhost:{{port}}
@username=alice
@password=alice

### Job Definition
GET http://{{host}}/api/job-scheduling/v1/JobDefinition
Authorization: Basic {{username}} {{password}}

### Job Definition Parameters
GET http://{{host}}/api/job-scheduling/v1/JobDefinition/JOB_1/parameters
Authorization: Basic {{username}} {{password}}

### Job
GET http://{{host}}/api/job-scheduling/v1/Job
Authorization: Basic {{username}} {{password}}

### Job Parameters
GET http://{{host}}/api/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/parameters
Authorization: Basic {{username}} {{password}}

### Job Results
GET http://{{host}}/api/job-scheduling/v1/Job/5a89dfec-59f9-4a91-90fe-3c7ca7407103/results
Authorization: Basic {{username}} {{password}}

### Job Result Messages
GET http://{{host}}/api/job-scheduling/v1/JobResult/c2eb590f-9505-4fd6-a5e2-511a1b2ff47f/messages
Authorization: Basic {{username}} {{password}}

### Job Result Message Data
GET http://{{host}}/api/job-scheduling/v1/JobResult/b2eb590f-9505-4fd6-a5e2-511a1b2ff47f/data
Authorization: Basic {{username}} {{password}}

### Create Job
POST http://{{host}}/api/job-scheduling/v1/Job
Authorization: Basic {{username}} {{password}}
Content-Type: application/json

{
    "name": "JOB_1",
    "referenceID": "abc4711",
    "parameters": [{
        "name": "A",
        "value": "abc"
      },
      {
        "name": "B",
        "value": "21"
      },
      {
        "name": "C",
        "value": "false"
      },
      {
        "name": "D",
        "value": "11.12"
      },
      {
        "name": "E",
        "value": "2025-01-01T12:00:00Z"
      }
    ]
}

### Cancel Job
POST http://{{host}}/api/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/cancel
Authorization: Basic {{username}} {{password}}
Content-Type: application/json
"
`;

exports[`Build Java / Kyma 5`] = `
"<?xml version="1.0" encoding="UTF-8" standalone="yes"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>afcsdk-parent</artifactId>
    <groupId>customer</groupId>
    <version>\${revision}</version>
  </parent>
  <artifactId>afcsdk</artifactId>
  <packaging>jar</packaging>
  <name>afcsdk</name>
  <dependencies>
    <dependency>
      <groupId>com.sap.cds</groupId>
      <artifactId>cds-starter-spring-boot</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sap.cds</groupId>
      <artifactId>cds-adapter-odata-v4</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>

  	<dependency>
  		<groupId>com.sap.cds</groupId>
  		<artifactId>cds-starter-k8s</artifactId>
  		<scope>runtime</scope>
  	</dependency>

  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-actuator</artifactId>
  	</dependency>

  	<dependency>
  		<groupId>com.sap.cds</groupId>
  		<artifactId>cds-starter-cloudfoundry</artifactId>
  		<scope>runtime</scope>
  	</dependency>
  </dependencies>
  <build>
    <finalName>\${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>\${spring.boot.version}</version>
        <configuration>
          <skip>false</skip>
        </configuration>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <classifier>exec</classifier>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.sap.cds</groupId>
        <artifactId>cds-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>cds.clean</id>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
          <execution>
            <id>cds.install-node</id>
            <goals>
              <goal>install-node</goal>
            </goals>
          </execution>
          <execution>
            <id>cds.npm-ci</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>ci</arguments>
            </configuration>
          </execution>
          <execution>
            <id>cds.resolve</id>
            <goals>
              <goal>resolve</goal>
            </goals>
          </execution>
          <execution>
            <id>cds.build</id>
            <goals>
              <goal>cds</goal>
            </goals>
            <configuration>
              <commands>
                <command>build --for java</command>
                <command>deploy --to h2 --with-mocks --dry --out "\${project.basedir}/src/main/resources/schema-h2.sql"</command>
              </commands>
            </configuration>
          </execution>
          <execution>
            <id>cds.generate</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <basePackage>cds.gen</basePackage>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>"
`;

exports[`Build Java / Kyma 6`] = `
"---
spring:
  config.activate.on-profile: default
  sql.init.platform: h2
  openservicebroker:
    catalog:
      services:
        - id: e25a901f-43d1-43c0-bbd6-48b9c6aecb61
          name: afcsdk
          description: AFC Scheduling Provider Service
          bindable: true
          plans:
            - id: 958cbd91-af93-4fdd-a793-16c82ae9e70b
              name: standard
              description: Standard plan
              free: true
              bindable: true
              plan_updateable: true
          metadata:
            displayName: AFC Scheduling Provider Service
            longDescription: Scheduling Provider Service for SAP Advanced Financial Closing
cds:
  data-source.auto-config.enabled: false
sap-afc-sdk:
  endpoints:
    approuter: https://afcsdk-approuter.cloud.sap
    server: https://afcsdk-srv.cloud.sap
  mockProcessing:
    min: 0
    max: 10
    default: completed
    status:
      completed: 0.5
      completedWithWarning: 0.2
      completedWithError: 0.2
      failed: 0.1
broker:
  name: afcsdk
  user: broker-user
  credentialsHash: sha256:xxx=:xxx=
  endpoints:
    api: /api
    job-scheduling-v1: /api/job-scheduling/v1
  credential-types:
    - binding-secret
    - x509
---
management:
  endpoint:
    health:
      show-components: always
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health
  health:
    defaults:
      enabled: false
    ping:
      enabled: true
    db:
      enabled: true
"
`;

exports[`Build Java / Kyma 7`] = `
"package customer.afcsdk.scheduling;

import cds.gen.schedulingprocessingservice.*;

import com.sap.cds.services.handler.EventHandler;
import com.sap.cds.services.handler.annotations.On;
import com.sap.cds.services.handler.annotations.ServiceName;
import com.sap.cds.services.persistence.PersistenceService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

import java.io.IOException;

@Component
@ServiceName(SchedulingProcessingService_.CDS_NAME)
public class SchedulingProcessingHandler implements EventHandler {

    @Autowired
    protected PersistenceService persistenceService;

    public CustomSchedulingProcessingHandler() {
        super();
    }

    @Order(1)
    @On(event = ProcessJobContext.CDS_NAME)
    public void processJob(ProcessJobContext context) throws IOException {
        // Your logic goes here
        context.proceed();
    }

    @Order(1)
    @On(event = UpdateJobContext.CDS_NAME)
    public void updateJob(UpdateJobContext context) {
        // Your logic goes here
        context.proceed();
    }

    @Order(1)
    @On(event = CancelJobContext.CDS_NAME)
    public void cancelJob(CancelJobContext context) {
        // Your logic goes here
        context.proceed();
    }

    @Order(1)
    @On(event = SyncJobContext.CDS_NAME)
    public void syncJob(SyncJobContext context) {
        // Your logic goes here
        context.proceed();
    }
}"
`;

exports[`Build Java / Kyma 8`] = `
"package customer.afcsdk.scheduling;

import cds.gen.schedulingprocessingservice.SchedulingProcessingService;

import cds.gen.schedulingproviderservice.*;
import cds.gen.schedulingproviderservice.Job;
import cds.gen.schedulingproviderservice.JobResult_;
import cds.gen.schedulingproviderservice.Job_;

import com.sap.cds.services.cds.CdsCreateEventContext;
import com.sap.cds.services.cds.CqnService;
import com.sap.cds.services.handler.EventHandler;
import com.sap.cds.services.handler.annotations.On;
import com.sap.cds.services.handler.annotations.ServiceName;
import com.sap.cds.services.persistence.PersistenceService;

import org.springframework.core.annotation.Order;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.util.*;

@Component
@ServiceName(SchedulingProviderService_.CDS_NAME)
public class SchedulingProviderHandler implements EventHandler {

    @Autowired
    private PersistenceService persistenceService;

    @Autowired
    private SchedulingProcessingService processingService;

    @Order(1)
    @On(event = CqnService.EVENT_CREATE, entity = Job_.CDS_NAME)
    public void createJob(CdsCreateEventContext context, List<Job> jobs) {
        // Your logic goes here
        context.proceed();
    }

    @Order(1)
    @On(event = JobCancelContext.CDS_NAME, entity = Job_.CDS_NAME)
    public void cancelJob(JobCancelContext context) {
        // Your logic goes here
        context.proceed();
    }

    @Order(1)
    @On(event = JobResultDataContext.CDS_NAME, entity = JobResult_.CDS_NAME)
    public void downloadData(JobResultDataContext context) throws IOException {
        // Your logic goes here
        context.proceed();
    }
}"
`;

exports[`Build Java / Kyma 9`] = `
"package customer.afcsdk.scheduling;

import org.json.JSONArray;
import org.json.JSONObject;
import org.junit.jupiter.api.Test;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.web.servlet.MockMvc;

import java.util.List;
import java.util.Map;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

@AutoConfigureMockMvc
public class CustomSchedulingProviderControllerTest {

    @Autowired
    private MockMvc mockMvc;

    @Test
    @WithMockUser("authenticated")
    public void getJobDefinitions() throws Exception {
        mockMvc.perform(get("/api/job-scheduling/v1/JobDefinition"))
                .andExpect(status().isOk());
    }

    @Test
    @WithMockUser("authenticated")
    public void getJobs() throws Exception {
        mockMvc.perform(get("/api/job-scheduling/v1/Job"))
                .andExpect(status().isOk());
    }

    @Test
    @WithMockUser("authenticated")
    public void createJobBasic() throws Exception {
        JSONObject job = new JSONObject(Map.of(
                "name", "JOB_1",
                "referenceID", "c1253940-5f25-4a0b-8585-f62bd085b327",
                "parameters", new JSONArray(List.of(
                        new JSONObject(Map.of(
                                "name", "A",
                                "value", "abc")),
                        new JSONObject(Map.of(
                                "name", "C",
                                "value", "true")))
                ))
        );
        mockMvc.perform(post("/api/job-scheduling/v1/Job").contentType("application/json")
                        .content(job.toString()))
                .andExpect(status().isCreated());

    }
}
"
`;

exports[`Build Java / Kyma 10`] = `
"apiVersion: v2
name: afcsdk
description: A simple CAP project.
type: application
version: 1.0.0-SNAPSHOT
appVersion: 1.0.0-SNAPSHOT
annotations:
  app.kubernetes.io/managed-by: cds-dk/helm
dependencies:
  - name: web-application
    alias: srv
    version: ">0.0.0"
  - name: service-instance
    alias: destination
    version: ">0.0.0"
  - name: service-instance
    alias: xsuaa
    version: ">0.0.0"
  - name: service-instance
    alias: hana
    version: ">0.0.0"
  - name: content-deployment
    alias: hana-deployer
    version: ">0.0.0"
  - name: web-application
    alias: approuter
    version: ">0.0.0"
  - name: service-instance
    alias: html5-apps-repo-host
    version: ">0.0.0"
  - name: content-deployment
    alias: html5-apps-deployer
    version: ">0.0.0"
  - name: service-instance
    alias: html5-apps-repo-runtime
    version: ">0.0.0"
"
`;

exports[`Build Java / Kyma 11`] = `
"# yaml-language-server: $schema=./values.schema.json

global:
  domain: xxx.stage.kyma.ondemand.com
  imagePullSecret:
    name: docker-registry
  image:
    registry: afcsdk.common.repositories.cloud.sap
    tag: latest
srv:
  bindings:
    destination:
      serviceInstanceName: destination
    auth:
      serviceInstanceName: xsuaa
    db:
      serviceInstanceName: hana
    cloud-logging:
      serviceInstanceName: cloud-logging
      credentialsRotationPolicy:
        enabled: true
        rotationFrequency: 168h
  image:
    repository: afcsdk-srv
  env:
    SPRING_PROFILES_ACTIVE: cloud
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 1G
    requests:
      ephemeral-storage: 1G
      cpu: 1000m
      memory: 1G
  health:
    liveness:
      path: /actuator/health/liveness
    readiness:
      path: /actuator/health/readiness
  expose:
    enabled: true
  networkSecurity:
    allowNamespaceInternal: true
destination:
  serviceOfferingName: destination
  servicePlanName: lite
  parameters:
    version: 1.0.0
    HTML5Runtime_enabled: true
xsuaa:
  serviceOfferingName: xsuaa
  servicePlanName: broker
  parameters:
    tenant-mode: dedicated
    oauth2-configuration:
      redirect-uris:
        - https://*.{{ tpl .Values.global.domain . }}/**
    xsappname: afcsdk-{{ .Release.Namespace }}
hana-deployer:
  image:
    repository: afcsdk-hana-deployer
  bindings:
    hana:
      serviceInstanceName: hana
  resources:
    limits:
      cpu: 2000m
      memory: 1G
    requests:
      cpu: 1000m
      memory: 1G
hana:
  serviceOfferingName: hana
  servicePlanName: hdi-shared
approuter:
  image:
    repository: afcsdk-approuter
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /
    readiness:
      path: /
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-approuter-configmap"
  bindings:
    auth:
      serviceInstanceName: xsuaa
    html5-apps-repo-runtime:
      serviceInstanceName: html5-apps-repo-runtime
backendDestinations:
  srv-api:
    service: srv
html5-apps-repo-host:
  serviceOfferingName: html5-apps-repo
  servicePlanName: app-host
html5-apps-deployer:
  env:
    SAP_CLOUD_SERVICE: afcsdk.service
  image:
    repository: afcsdk-html5-deployer
  bindings:
    xsuaa:
      serviceInstanceName: xsuaa
    destination:
      serviceInstanceName: destination
    html5-apps-repo:
      serviceInstanceName: html5-apps-repo-host
  resources:
    limits:
      cpu: 2000m
      memory: 1G
    requests:
      cpu: 1000m
      memory: 1G
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-html5-apps-deployer-configmap"
html5-apps-repo-runtime:
  serviceOfferingName: html5-apps-repo
  servicePlanName: app-runtime
cloud-logging:
  serviceOfferingName: cloud-logging
  servicePlanName: standard
  parameters:
    ingest_otlp:
      enabled: true
"
`;

exports[`Build Java / Kyma 12`] = `
"_schema-version: '1.0'
repository: afcsdk.common.repositories.cloud.sap
tag: latest
before-all:
  - npx cds build --production
  - mvn clean package -DskipTests=true --batch-mode
  - mkdir -p ui-resources/resources
  - npm i --prefix app/scheduling.monitoring.job
  - npm run build --prefix app/scheduling.monitoring.job
  # zip filename should match the archiveName specified in ui5-deploy.yaml
  - cp -f app/scheduling.monitoring.job/dist/scheduling.monitoring.job.zip ui-resources/resources/scheduling.monitoring.job.zip
modules:
  - name: afcsdk-srv
    build-parameters:
      buildpack:
        builder: builder-jammy-base
        path: srv/target/afcsdk-exec.jar
        env:
          SPRING_PROFILES_ACTIVE: cloud
          BP_JVM_VERSION: 21
  - name: afcsdk-hana-deployer
    build-parameters:
      buildpack:
        type: nodejs
        builder: builder-jammy-base
        path: db
        env:
          BP_NODE_RUN_SCRIPTS: ""
  - name: afcsdk-approuter
    build-parameters:
      buildpack:
        type: nodejs
        builder: builder-jammy-base
        path: app/router
        env:
          BP_NODE_RUN_SCRIPTS: ""
  - name: afcsdk-html5-deployer
    build-parameters:
      buildpack:
        type: nodejs
        builder: builder-jammy-base
        path: ui-resources
        env:
          BP_NODE_RUN_SCRIPTS: ""
"
`;

exports[`Build Node / CF 1`] = `
"{
  "name": "afcsdk",
  "version": "1.0.0",
  "description": "A simple CAP project.",
  "repository": "<Add your repository here>",
  "license": "UNLICENSED",
  "private": true,
  "dependencies": {
    "@cap-js-community/sap-afc-sdk": "file:../../..",
    "@cap-js/hana": "^1",
    "@sap/cds": "^8",
    "@sap/xssec": "^4",
    "express": "^4",
    "redis": "^4"
  },
  "devDependencies": {
    "@cap-js/cds-test": "^0.3.0",
    "@cap-js/cds-types": "^0.10.0",
    "@cap-js/sqlite": "^1",
    "@sap/cds-dk": "^8",
    "jest": "^29.7.0"
  },
  "scripts": {
    "start": "cds-serve",
    "test": "jest"
  },
  "cds": {
    "requires": {
      "sap-afc-sdk": {
        "[production]": {
          "endpoints": {
            "approuter": "https://afcsdk-approuter.cloud.sap",
            "server": "https://afcsdk-srv.cloud.sap"
          }
        },
        "mockProcessing": {
          "min": 0,
          "max": 10,
          "default": "completed",
          "status": {
            "completed": 0.5,
            "completedWithWarning": 0.2,
            "completedWithError": 0.2,
            "failed": 0.1
          }
        }
      },
      "[production]": {
        "auth": "xsuaa",
        "db": "hana",
        "destinations": true,
        "html5-runtime": true
      },
      "workzone": true,
      "SchedulingProcessingService": {
        "outbox": {
          "events": {
            "syncJob": {
              "cron": "*/1 * * * *"
            }
          }
        }
      }
    },
    "sql": {
      "native_hana_associations": false
    }
  },
  "sapux": [
    "node_modules/@cap-js-community/sap-afc-sdk/app/scheduling.monitoring.job"
  ]
}"
`;

exports[`Build Node / CF 2`] = `
"{
  "routes": [
    {
      "source": "^/(.*)$",
      "target": "$1",
      "destination": "srv-api",
      "csrfProtection": true
    }
  ],
  "websockets": {
    "enabled": true
  }
}"
`;

exports[`Build Node / CF 3`] = `
"@api=<api endpoint from cloud deployment>
@token=<xsuaa token>

### Job Definition
GET https://{{api}}/job-scheduling/v1/JobDefinition
Authorization: Bearer {{token}}

### Job Definition Parameters
GET https://{{api}}/job-scheduling/v1/JobDefinition/JOB_1/parameters
Authorization: Bearer {{token}}

### Job
GET https://{{api}}/job-scheduling/v1/Job
Authorization: Bearer {{token}}

### Job Parameters
GET https://{{api}}/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/parameters
Authorization: Bearer {{token}}

### Job Results
GET http://{{api}}/job-scheduling/v1/Job/5a89dfec-59f9-4a91-90fe-3c7ca7407103/results
Authorization: Bearer {{token}}

### Job Result Messages
GET http://{{api}}/job-scheduling/v1/JobResult/c2eb590f-9505-4fd6-a5e2-511a1b2ff47f/messages
Authorization: Bearer {{token}}

### Job Result Message Data
GET http://{{api}}/job-scheduling/v1/JobResult/b2eb590f-9505-4fd6-a5e2-511a1b2ff47f/data
Authorization: Bearer {{token}}

### Create Job
POST https://{{api}}/job-scheduling/v1/Job
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "JOB_1",
    "referenceID": "abc4711",
    "parameters": [{
        "name": "A",
        "value": "abc"
      },
      {
        "name": "B",
        "value": "21"
      },
      {
        "name": "C",
        "value": "false"
      },
      {
        "name": "D",
        "value": "11.12"
      },
      {
        "name": "E",
        "value": "2025-01-01T12:00:00Z"
      }
    ]
}

### Cancel Job
POST https://{{api}}/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/cancel
Authorization: Bearer {{token}}
Content-Type: application/json
"
`;

exports[`Build Node / CF 4`] = `
"@port=4004
@host=localhost:{{port}}
@username=alice
@password=alice

### Job Definition
GET http://{{host}}/api/job-scheduling/v1/JobDefinition
Authorization: Basic {{username}} {{password}}

### Job Definition Parameters
GET http://{{host}}/api/job-scheduling/v1/JobDefinition/JOB_1/parameters
Authorization: Basic {{username}} {{password}}

### Job
GET http://{{host}}/api/job-scheduling/v1/Job
Authorization: Basic {{username}} {{password}}

### Job Parameters
GET http://{{host}}/api/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/parameters
Authorization: Basic {{username}} {{password}}

### Job Results
GET http://{{host}}/api/job-scheduling/v1/Job/5a89dfec-59f9-4a91-90fe-3c7ca7407103/results
Authorization: Basic {{username}} {{password}}

### Job Result Messages
GET http://{{host}}/api/job-scheduling/v1/JobResult/c2eb590f-9505-4fd6-a5e2-511a1b2ff47f/messages
Authorization: Basic {{username}} {{password}}

### Job Result Message Data
GET http://{{host}}/api/job-scheduling/v1/JobResult/b2eb590f-9505-4fd6-a5e2-511a1b2ff47f/data
Authorization: Basic {{username}} {{password}}

### Create Job
POST http://{{host}}/api/job-scheduling/v1/Job
Authorization: Basic {{username}} {{password}}
Content-Type: application/json

{
    "name": "JOB_1",
    "referenceID": "abc4711",
    "parameters": [{
        "name": "A",
        "value": "abc"
      },
      {
        "name": "B",
        "value": "21"
      },
      {
        "name": "C",
        "value": "false"
      },
      {
        "name": "D",
        "value": "11.12"
      },
      {
        "name": "E",
        "value": "2025-01-01T12:00:00Z"
      }
    ]
}

### Cancel Job
POST http://{{host}}/api/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/cancel
Authorization: Basic {{username}} {{password}}
Content-Type: application/json
"
`;

exports[`Build Node / CF 5`] = `
"{
  "SBF_SERVICE_CONFIG": {
    "afcsdk": {
      "extend_credentials": {
        "shared": {
          "endpoints": {
            "api": "/api",
            "job-scheduling-v1": "/api/job-scheduling/v1"
          },
          "oauth2-configuration": {
            "credential-types": [
              "binding-secret",
              "x509"
            ]
          }
        }
      },
      "extend_xssecurity": {
        "shared": {
          "oauth2-configuration": {
            "credential-types": [
              "binding-secret",
              "x509"
            ]
          }
        }
      }
    }
  },
  "SBF_BROKER_CREDENTIALS_HASH": {
    "broker-user": "sha256:xxx=:xxx="
  }
}"
`;

exports[`Build Node / CF 6`] = `
"{
  "services": [
    {
      "id": "e25a901f-43d1-43c0-bbd6-48b9c6aecb61",
      "name": "afcsdk",
      "description": "AFC Scheduling Provider Service",
      "bindable": true,
      "plans": [
        {
          "id": "958cbd91-af93-4fdd-a793-16c82ae9e70b",
          "name": "standard",
          "description": "Standard plan",
          "free": true,
          "bindable": true,
          "plan_updateable": true
        }
      ],
      "metadata": {
        "displayName": "AFC Scheduling Provider Service",
        "longDescription": "Scheduling Provider Service for SAP Advanced Financial Closing"
      }
    }
  ]
}"
`;

exports[`Build Node / CF 7`] = `
"using SchedulingProcessingService from '@cap-js-community/sap-afc-sdk';

annotate SchedulingProcessingService with @impl: '/srv/scheduling-processing-service.js';
"
`;

exports[`Build Node / CF 8`] = `
""use strict";

// eslint-disable-next-line no-unused-vars
const { SchedulingProcessingService, JobStatus } = require("@cap-js-community/sap-afc-sdk");

class CustomSchedulingProcessingService extends SchedulingProcessingService {
  async init() {
    const { processJob, updateJob, cancelJob, syncJob } = this.operations;

    this.on(processJob, async (req, next) => {
      // Your logic goes here. Check req.data.testRun
      // await this.processJobUpdate(req, JobStatus.completed, [{ ... }]);
      await next();
    });

    this.on(updateJob, async (req, next) => {
      // Your logic goes here
      await next();
    });

    this.on(cancelJob, async (req, next) => {
      // Your logic goes here
      await next();
    });

    this.on(syncJob, async (req, next) => {
      // Your logic goes here
      await next();
    });

    super.init();
  }
}

module.exports = CustomSchedulingProcessingService;
"
`;

exports[`Build Node / CF 9`] = `
"using SchedulingProviderService from '@cap-js-community/sap-afc-sdk';

annotate SchedulingProviderService with @impl: '/srv/scheduling-provider-service.js';"
`;

exports[`Build Node / CF 10`] = `
""use strict";

const { SchedulingProviderService } = require("@cap-js-community/sap-afc-sdk");

class CustomSchedulingProviderService extends SchedulingProviderService {
  async init() {
    const { Job, JobResult } = this.entities;

    this.on("CREATE", Job, async (req, next) => {
      // Your logic goes here
      await next();
    });

    this.on(Job.actions.cancel, Job, async (req, next) => {
      // Your logic goes here
      await next();
    });

    this.on(JobResult.actions.data, JobResult, async (req, next) => {
      // Your logic goes here
      await next();
    });

    super.init();
  }
}

module.exports = CustomSchedulingProviderService;
"
`;

exports[`Build Node / CF 11`] = `
""use strict";

const cds = require("@sap/cds");

const { GET, POST, test } = cds.test(__dirname + "/..");

describe("Scheduling Provider", () => {
  beforeEach(async () => {
    await test.data.reset();
  });

  it("GET Job Definitions", async () => {
    const response = await GET("/api/job-scheduling/v1/JobDefinition");
    expect(response.status).toEqual(200);
  });

  it("GET Jobs", async () => {
    const response = await GET("/api/job-scheduling/v1/Job");
    expect(response.status).toEqual(200);
  });

  it("POST Job", async () => {
    const response = await POST("/api/job-scheduling/v1/Job", {
      name: "JOB_1",
      referenceID: "c1253940-5f25-4a0b-8585-f62bd085b327",
      parameters: [
        {
          name: "A",
          value: "abc",
        },
        {
          name: "C",
          value: "true",
        },
      ],
    });
    expect(response.status).toBe(201);
  });
});
"
`;

exports[`Build Node / CF 12`] = `
"_schema-version: 3.3.0
ID: afcsdk
version: 1.0.0
description: "A simple CAP project."
parameters:
  enable-parallel-deployments: true
  deploy_mode: html5-repo
build-parameters:
  before-all:
    - builder: custom
      commands:
        - npm ci
        - npx cds build --production
modules:
  - name: afcsdk-srv
    type: nodejs
    path: gen/srv
    parameters:
      instances: 1
      buildpack: nodejs_buildpack
    build-parameters:
      builder: npm-ci
    provides:
      - name: srv-api # required by consumers of CAP services (e.g. approuter)
        properties:
          srv-url: \${default-url}
    requires:
      - name: afcsdk-destination
      - name: afcsdk-db
      - name: afcsdk-auth
      - name: afcsdk-redis
      - name: afcsdk-cloud-logging

  - name: afcsdk-db-deployer
    type: hdb
    path: gen/db
    parameters:
      buildpack: nodejs_buildpack
    requires:
      - name: afcsdk-db

  - name: afcsdk
    type: approuter.nodejs
    path: app/router
    parameters:
      keep-existing-routes: true
      disk-quota: 256M
      memory: 256M
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api # must be used in xs-app.json as well
          url: ~{srv-url}
          forwardAuthToken: true
      - name: afcsdk-auth
      - name: afcsdk-destination
      - name: afcsdk-html5-runtime
      - name: afcsdk-cloud-logging
    provides:
      - name: app-api
        properties:
          app-protocol: \${protocol}
          app-uri: \${default-uri}

  - name: afcsdk-app-deployer
    type: com.sap.application.content
    path: gen
    requires:
      - name: afcsdk-html5-repo-host
        parameters:
          content-target: true
    build-parameters:
      build-result: app/
      requires:
        - name: afcsdkscheduling.monitoring.job
          artifacts:
            - scheduling.monitoring.job.zip
          target-path: app/

  - name: afcsdkscheduling.monitoring.job
    type: html5
    path: node_modules/@cap-js-community/sap-afc-sdk/app/scheduling.monitoring.job
    build-parameters:
      build-result: dist
      builder: custom
      commands:
        - npm i
        - npm run build
      supported-platforms: []

  - name: afcsdk-destinations
    type: com.sap.application.content
    requires:
      - name: afcsdk-auth
        parameters:
          service-key:
            name: afcsdk-auth-key
      - name: afcsdk-html5-repo-host
        parameters:
          service-key:
            name: afcsdk-html5-repo-host-key
      - name: srv-api
      - name: afcsdk-destination
        parameters:
          content-target: true
    build-parameters:
      no-source: true
    parameters:
      content:
        instance:
          existing_destinations_policy: update
          destinations:
            - Name: afcsdk-html5-repository
              ServiceInstanceName: afcsdk-html5-repo-host
              ServiceKeyName: afcsdk-html5-repo-host-key
              sap.cloud.service: afcsdk.service
            - Name: afcsdk-auth
              Authentication: OAuth2UserTokenExchange
              ServiceInstanceName: afcsdk-auth
              ServiceKeyName: afcsdk-auth-key
              sap.cloud.service: afcsdk.service

resources:
  - name: afcsdk-destination
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      config:
        HTML5Runtime_enabled: true
        init_data:
          instance:
            existing_destinations_policy: update
            destinations:
              - Name: srv-api
                URL: ~{srv-api/srv-url}
                Authentication: NoAuthentication
                Type: HTTP
                ProxyType: Internet
                HTML5.ForwardAuthToken: true
                HTML5.DynamicDestination: true
              - Name: ui5
                URL: https://ui5.sap.com
                Authentication: NoAuthentication
                Type: HTTP
                ProxyType: Internet
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api # must be used in xs-app.json as well
          url: ~{srv-url}
          forwardAuthToken: true
  - name: afcsdk-db
    type: com.sap.xs.hdi-container
    parameters:
      service: hana
      service-plan: hdi-shared
  - name: afcsdk-auth
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: broker
      path: ./xs-security.json
      config:
        xsappname: afcsdk-\${org}-\${space}
        tenant-mode: dedicated
  - name: afcsdk-redis
    type: org.cloudfoundry.managed-service
    parameters:
      service: redis-cache
      service-plan: standard
      # config:
      # memory: 2 # GB, can be 2 or 4
      # multi_az: true
      # cluster_mode: true
      # shard_count: 1
      # node_count: 3 # per shard minimum is 3 (for standard plan)
      # engine_version: "6.0" # can be "4.0" or "6.0"
      # maintenance_window:
      # day_of_week: Friday
      # start_hour_utc: 0
      # duration: 5 # hours

  - name: afcsdk-html5-repo-host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host
  - name: afcsdk-html5-runtime
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime
  - name: afcsdk-cloud-logging
    type: org.cloudfoundry.managed-service
    parameters:
      service: cloud-logging
      service-plan: standard
      config:
        ingest_otlp:
          enabled: true
"
`;

exports[`Build Node / Kyma 1`] = `
"{
  "name": "afcsdk",
  "version": "1.0.0",
  "description": "A simple CAP project.",
  "repository": "<Add your repository here>",
  "license": "UNLICENSED",
  "private": true,
  "dependencies": {
    "@cap-js-community/sap-afc-sdk": "file:../../..",
    "@cap-js/hana": "^1",
    "@sap/cds": "^8",
    "@sap/xssec": "^4",
    "express": "^4",
    "redis": "^4"
  },
  "devDependencies": {
    "@cap-js/cds-test": "^0.3.0",
    "@cap-js/cds-types": "^0.10.0",
    "@cap-js/sqlite": "^1",
    "jest": "^29.7.0"
  },
  "scripts": {
    "start": "cds-serve",
    "test": "jest"
  },
  "cds": {
    "requires": {
      "sap-afc-sdk": {
        "[production]": {
          "endpoints": {
            "approuter": "https://afcsdk-approuter.cloud.sap",
            "server": "https://afcsdk-srv.cloud.sap"
          }
        },
        "mockProcessing": {
          "min": 0,
          "max": 10,
          "default": "completed",
          "status": {
            "completed": 0.5,
            "completedWithWarning": 0.2,
            "completedWithError": 0.2,
            "failed": 0.1
          }
        }
      },
      "[production]": {
        "auth": "xsuaa",
        "db": "hana",
        "destinations": true,
        "html5-runtime": true
      },
      "workzone": true,
      "SchedulingProcessingService": {
        "outbox": {
          "events": {
            "syncJob": {
              "cron": "*/1 * * * *"
            }
          }
        }
      }
    },
    "sql": {
      "native_hana_associations": false
    }
  },
  "sapux": [
    "node_modules/@cap-js-community/sap-afc-sdk/app/scheduling.monitoring.job"
  ]
}"
`;

exports[`Build Node / Kyma 2`] = `
"{
  "routes": [
    {
      "source": "^/(.*)$",
      "target": "$1",
      "destination": "srv-api",
      "csrfProtection": true
    }
  ],
  "websockets": {
    "enabled": true
  }
}"
`;

exports[`Build Node / Kyma 3`] = `
"@api=<api endpoint from cloud deployment>
@token=<xsuaa token>

### Job Definition
GET https://{{api}}/job-scheduling/v1/JobDefinition
Authorization: Bearer {{token}}

### Job Definition Parameters
GET https://{{api}}/job-scheduling/v1/JobDefinition/JOB_1/parameters
Authorization: Bearer {{token}}

### Job
GET https://{{api}}/job-scheduling/v1/Job
Authorization: Bearer {{token}}

### Job Parameters
GET https://{{api}}/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/parameters
Authorization: Bearer {{token}}

### Job Results
GET http://{{api}}/job-scheduling/v1/Job/5a89dfec-59f9-4a91-90fe-3c7ca7407103/results
Authorization: Bearer {{token}}

### Job Result Messages
GET http://{{api}}/job-scheduling/v1/JobResult/c2eb590f-9505-4fd6-a5e2-511a1b2ff47f/messages
Authorization: Bearer {{token}}

### Job Result Message Data
GET http://{{api}}/job-scheduling/v1/JobResult/b2eb590f-9505-4fd6-a5e2-511a1b2ff47f/data
Authorization: Bearer {{token}}

### Create Job
POST https://{{api}}/job-scheduling/v1/Job
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "JOB_1",
    "referenceID": "abc4711",
    "parameters": [{
        "name": "A",
        "value": "abc"
      },
      {
        "name": "B",
        "value": "21"
      },
      {
        "name": "C",
        "value": "false"
      },
      {
        "name": "D",
        "value": "11.12"
      },
      {
        "name": "E",
        "value": "2025-01-01T12:00:00Z"
      }
    ]
}

### Cancel Job
POST https://{{api}}/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/cancel
Authorization: Bearer {{token}}
Content-Type: application/json
"
`;

exports[`Build Node / Kyma 4`] = `
"@port=4004
@host=localhost:{{port}}
@username=alice
@password=alice

### Job Definition
GET http://{{host}}/api/job-scheduling/v1/JobDefinition
Authorization: Basic {{username}} {{password}}

### Job Definition Parameters
GET http://{{host}}/api/job-scheduling/v1/JobDefinition/JOB_1/parameters
Authorization: Basic {{username}} {{password}}

### Job
GET http://{{host}}/api/job-scheduling/v1/Job
Authorization: Basic {{username}} {{password}}

### Job Parameters
GET http://{{host}}/api/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/parameters
Authorization: Basic {{username}} {{password}}

### Job Results
GET http://{{host}}/api/job-scheduling/v1/Job/5a89dfec-59f9-4a91-90fe-3c7ca7407103/results
Authorization: Basic {{username}} {{password}}

### Job Result Messages
GET http://{{host}}/api/job-scheduling/v1/JobResult/c2eb590f-9505-4fd6-a5e2-511a1b2ff47f/messages
Authorization: Basic {{username}} {{password}}

### Job Result Message Data
GET http://{{host}}/api/job-scheduling/v1/JobResult/b2eb590f-9505-4fd6-a5e2-511a1b2ff47f/data
Authorization: Basic {{username}} {{password}}

### Create Job
POST http://{{host}}/api/job-scheduling/v1/Job
Authorization: Basic {{username}} {{password}}
Content-Type: application/json

{
    "name": "JOB_1",
    "referenceID": "abc4711",
    "parameters": [{
        "name": "A",
        "value": "abc"
      },
      {
        "name": "B",
        "value": "21"
      },
      {
        "name": "C",
        "value": "false"
      },
      {
        "name": "D",
        "value": "11.12"
      },
      {
        "name": "E",
        "value": "2025-01-01T12:00:00Z"
      }
    ]
}

### Cancel Job
POST http://{{host}}/api/job-scheduling/v1/Job/3a89dfec-59f9-4a91-90fe-3c7ca7407103/cancel
Authorization: Basic {{username}} {{password}}
Content-Type: application/json
"
`;

exports[`Build Node / Kyma 5`] = `
"{
  "SBF_SERVICE_CONFIG": {
    "afcsdk": {
      "extend_credentials": {
        "shared": {
          "endpoints": {
            "api": "/api",
            "job-scheduling-v1": "/api/job-scheduling/v1"
          },
          "oauth2-configuration": {
            "credential-types": [
              "binding-secret",
              "x509"
            ]
          }
        }
      },
      "extend_xssecurity": {
        "shared": {
          "oauth2-configuration": {
            "credential-types": [
              "binding-secret",
              "x509"
            ]
          }
        }
      }
    }
  },
  "SBF_BROKER_CREDENTIALS_HASH": {
    "broker-user": "sha256:xxx=:xxx="
  }
}"
`;

exports[`Build Node / Kyma 6`] = `
"{
  "services": [
    {
      "id": "e25a901f-43d1-43c0-bbd6-48b9c6aecb61",
      "name": "afcsdk",
      "description": "AFC Scheduling Provider Service",
      "bindable": true,
      "plans": [
        {
          "id": "958cbd91-af93-4fdd-a793-16c82ae9e70b",
          "name": "standard",
          "description": "Standard plan",
          "free": true,
          "bindable": true,
          "plan_updateable": true
        }
      ],
      "metadata": {
        "displayName": "AFC Scheduling Provider Service",
        "longDescription": "Scheduling Provider Service for SAP Advanced Financial Closing"
      }
    }
  ]
}"
`;

exports[`Build Node / Kyma 7`] = `
"using SchedulingProcessingService from '@cap-js-community/sap-afc-sdk';

annotate SchedulingProcessingService with @impl: '/srv/scheduling-processing-service.js';
"
`;

exports[`Build Node / Kyma 8`] = `
""use strict";

// eslint-disable-next-line no-unused-vars
const { SchedulingProcessingService, JobStatus } = require("@cap-js-community/sap-afc-sdk");

class CustomSchedulingProcessingService extends SchedulingProcessingService {
  async init() {
    const { processJob, updateJob, cancelJob, syncJob } = this.operations;

    this.on(processJob, async (req, next) => {
      // Your logic goes here. Check req.data.testRun
      // await this.processJobUpdate(req, JobStatus.completed, [{ ... }]);
      await next();
    });

    this.on(updateJob, async (req, next) => {
      // Your logic goes here
      await next();
    });

    this.on(cancelJob, async (req, next) => {
      // Your logic goes here
      await next();
    });

    this.on(syncJob, async (req, next) => {
      // Your logic goes here
      await next();
    });

    super.init();
  }
}

module.exports = CustomSchedulingProcessingService;
"
`;

exports[`Build Node / Kyma 9`] = `
"using SchedulingProviderService from '@cap-js-community/sap-afc-sdk';

annotate SchedulingProviderService with @impl: '/srv/scheduling-provider-service.js';"
`;

exports[`Build Node / Kyma 10`] = `
""use strict";

const { SchedulingProviderService } = require("@cap-js-community/sap-afc-sdk");

class CustomSchedulingProviderService extends SchedulingProviderService {
  async init() {
    const { Job, JobResult } = this.entities;

    this.on("CREATE", Job, async (req, next) => {
      // Your logic goes here
      await next();
    });

    this.on(Job.actions.cancel, Job, async (req, next) => {
      // Your logic goes here
      await next();
    });

    this.on(JobResult.actions.data, JobResult, async (req, next) => {
      // Your logic goes here
      await next();
    });

    super.init();
  }
}

module.exports = CustomSchedulingProviderService;
"
`;

exports[`Build Node / Kyma 11`] = `
""use strict";

const cds = require("@sap/cds");

const { GET, POST, test } = cds.test(__dirname + "/..");

describe("Scheduling Provider", () => {
  beforeEach(async () => {
    await test.data.reset();
  });

  it("GET Job Definitions", async () => {
    const response = await GET("/api/job-scheduling/v1/JobDefinition");
    expect(response.status).toEqual(200);
  });

  it("GET Jobs", async () => {
    const response = await GET("/api/job-scheduling/v1/Job");
    expect(response.status).toEqual(200);
  });

  it("POST Job", async () => {
    const response = await POST("/api/job-scheduling/v1/Job", {
      name: "JOB_1",
      referenceID: "c1253940-5f25-4a0b-8585-f62bd085b327",
      parameters: [
        {
          name: "A",
          value: "abc",
        },
        {
          name: "C",
          value: "true",
        },
      ],
    });
    expect(response.status).toBe(201);
  });
});
"
`;

exports[`Build Node / Kyma 12`] = `
"apiVersion: v2
name: afcsdk
description: A simple CAP project.
type: application
version: 1.0.0
appVersion: 1.0.0
annotations:
  app.kubernetes.io/managed-by: cds-dk/helm
dependencies:
  - name: web-application
    alias: srv
    version: ">0.0.0"
  - name: service-instance
    alias: destination
    version: ">0.0.0"
  - name: service-instance
    alias: hana
    version: ">0.0.0"
  - name: content-deployment
    alias: hana-deployer
    version: ">0.0.0"
  - name: service-instance
    alias: xsuaa
    version: ">0.0.0"
  - name: web-application
    alias: approuter
    version: ">0.0.0"
  - name: service-instance
    alias: html5-apps-repo-host
    version: ">0.0.0"
  - name: content-deployment
    alias: html5-apps-deployer
    version: ">0.0.0"
  - name: service-instance
    alias: html5-apps-repo-runtime
    version: ">0.0.0"
"
`;

exports[`Build Node / Kyma 13`] = `
"# yaml-language-server: $schema=./values.schema.json

global:
  domain: xxx.stage.kyma.ondemand.com
  imagePullSecret:
    name: docker-registry
  image:
    registry: afcsdk.common.repositories.cloud.sap
    tag: latest
srv:
  bindings:
    destination:
      serviceInstanceName: destination
    db:
      serviceInstanceName: hana
    auth:
      serviceInstanceName: xsuaa
    cloud-logging:
      serviceInstanceName: cloud-logging
      credentialsRotationPolicy:
        enabled: true
        rotationFrequency: 168h
  image:
    repository: afcsdk-srv
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /health
    readiness:
      path: /health
  expose:
    enabled: true
  networkSecurity:
    allowNamespaceInternal: true
destination:
  serviceOfferingName: destination
  servicePlanName: lite
  parameters:
    version: 1.0.0
    HTML5Runtime_enabled: true
hana-deployer:
  image:
    repository: afcsdk-hana-deployer
  bindings:
    hana:
      serviceInstanceName: hana
  resources:
    limits:
      cpu: 2000m
      memory: 1G
    requests:
      cpu: 1000m
      memory: 1G
hana:
  serviceOfferingName: hana
  servicePlanName: hdi-shared
xsuaa:
  serviceOfferingName: xsuaa
  servicePlanName: broker
  parameters:
    tenant-mode: dedicated
    oauth2-configuration:
      redirect-uris:
        - https://*.{{ tpl .Values.global.domain . }}/**
    xsappname: afcsdk-{{ .Release.Namespace }}
approuter:
  image:
    repository: afcsdk-approuter
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /
    readiness:
      path: /
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-approuter-configmap"
  bindings:
    auth:
      serviceInstanceName: xsuaa
    html5-apps-repo-runtime:
      serviceInstanceName: html5-apps-repo-runtime
backendDestinations:
  srv-api:
    service: srv
html5-apps-repo-host:
  serviceOfferingName: html5-apps-repo
  servicePlanName: app-host
html5-apps-deployer:
  env:
    SAP_CLOUD_SERVICE: afcsdk.service
  image:
    repository: afcsdk-html5-deployer
  bindings:
    xsuaa:
      serviceInstanceName: xsuaa
    destination:
      serviceInstanceName: destination
    html5-apps-repo:
      serviceInstanceName: html5-apps-repo-host
  resources:
    limits:
      cpu: 2000m
      memory: 1G
    requests:
      cpu: 1000m
      memory: 1G
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-html5-apps-deployer-configmap"
html5-apps-repo-runtime:
  serviceOfferingName: html5-apps-repo
  servicePlanName: app-runtime
cloud-logging:
  serviceOfferingName: cloud-logging
  servicePlanName: standard
  parameters:
    ingest_otlp:
      enabled: true
"
`;

exports[`Build Node / Kyma 14`] = `
"_schema-version: '1.0'
repository: afcsdk.common.repositories.cloud.sap
tag: latest
before-all:
  - npx cds build --production
  - mkdir -p ui-resources/resources
  - npm i --prefix
    node_modules/@cap-js-community/sap-afc-sdk/app/scheduling.monitoring.job
  - npm run build --prefix
    node_modules/@cap-js-community/sap-afc-sdk/app/scheduling.monitoring.job
  # zip filename should match the archiveName specified in ui5-deploy.yaml
  - cp -f
    node_modules/@cap-js-community/sap-afc-sdk/app/scheduling.monitoring.job/dist/scheduling.monitoring.job.zip
    ui-resources/resources/scheduling.monitoring.job.zip
modules:
  - name: afcsdk-srv
    build-parameters:
      buildpack:
        type: nodejs
        builder: builder-jammy-base
        path: gen/srv
        env:
          BP_NODE_RUN_SCRIPTS: ""
  - name: afcsdk-hana-deployer
    build-parameters:
      buildpack:
        type: nodejs
        builder: builder-jammy-base
        path: gen/db
        env:
          BP_NODE_RUN_SCRIPTS: ""
  - name: afcsdk-approuter
    build-parameters:
      buildpack:
        type: nodejs
        builder: builder-jammy-base
        path: app/router
        env:
          BP_NODE_RUN_SCRIPTS: ""
  - name: afcsdk-html5-deployer
    build-parameters:
      buildpack:
        type: nodejs
        builder: builder-jammy-base
        path: ui-resources
        env:
          BP_NODE_RUN_SCRIPTS: ""
"
`;
