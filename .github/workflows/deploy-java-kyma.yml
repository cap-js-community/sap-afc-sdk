# This workflow will set up a test project based on AFC SDK for CAP Java and deploy to Kyma
name: Test Deploy Java/Kyma
permissions:
  contents: read
  pull-requests: write

on:
  workflow_run:
    workflows: ["Main CI"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

env:
  NODE_OPTIONS: --use-openssl-ca
  DEBIAN_FRONTEND: noninteractive
jobs:
  default:
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - run: npm ci
      - name: Setup CDS project
        run: npx cds init afcsdkjava && cd afcsdkjava && npm i
      - name: Install SDK
        run: npm i github:cap-js-community/sap-afc-sdk
        working-directory: ./afcsdkjava
      - name: Boostrap SDK
        run: npx afc init kyma
        working-directory: ./afcsdkjava
        env:
          CONTAINER_REPOSITORY: ${{ secrets.ARTIFACTORY_REPOSITORY }}
          GLOBAL_DOMAIN: ${{ secrets.KYMA_GLOBAL_DOMAIN }}
          APPROUTER_URL: https://afcsdkjava-approuter-${{ secrets.KYMA_NAMESPACE }}.${{ secrets.KYMA_GLOBAL_DOMAIN }}
          SERVER_URL: https://afcsdkjava-srv-${{ secrets.KYMA_NAMESPACE }}.${{ secrets.KYMA_GLOBAL_DOMAIN }}
      - name: Add SDK features
        run: npx afc add -a app,broker,stub,mock,sample,test,http
        working-directory: ./afcsdkjava
        env:
          BROKER_PASSWORD_HASH: ${{ secrets.BROKER_PASSWORD_KYMA_HASH }}
          BROKER_SERVICE_ID: ${{ secrets.BROKER_SERVICE_KYMA_ID }}
          BROKER_SERVICE_PLAN_ID: ${{ secrets.BROKER_SERVICE_KYMA_PLAN_ID }}
      - name: Unit Test
        run: npm test
        working-directory: ./afcsdkjava
      - name: Setup Kyma
        uses: ./.github/actions/kyma-setup
        with:
          kubeConfig: ${{ secrets.KUBE_CONFIG }}
      - name: Login Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ARTIFACTORY_REPOSITORY }}
          username: ${{ secrets.ARTIFACTORY_CI_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_TOKEN }}
      - name: Containerize
        run: ctz containerize.yaml --push --logs
        working-directory: ./afcsdkjava
      - name: Upgrade
        run: helm upgrade --install afcsdkjava ./gen/chart -n ${{ secrets.KYMA_NAMESPACE }}
        working-directory: ./afcsdkjava
      - name: Rollout
        run: kubectl rollout restart deployment -n ${{ secrets.KYMA_NAMESPACE }}
        working-directory: ./afcsdkjava
